<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.gdu.petmall.dao.ReviewMapper">
	
  <resultMap type="ReviewDto" id="ReviewMap">
    <id     column="REVIEW_NO"          property="reviewNo" />
    <result column="REVIEW_TITLE"       property="reviewTitle" />
    <result column="REVIEW_CONTENTS"    property="reviewContents" />
    <result column="REVIEW_RATING"      property="reviewRating" />
    <result column="REVIEW_CREATED_AT"      property="reviewCreatedAt" />
    <result column="REVIEW_MODIFIED_AT"      property="reviewModifiedAt" />
    <result column="ORDER_DATE"         property="orderDate" />
    <association javaType="UserDto"  property="userDto">
      <id     column="USER_NO"       property="userNo" />
      <result column="EMAIL"         property="email" />
      <result column="NAME"          property="name" /> 
      <result column="GENDER"        property="gender" />
    </association>
    <association javaType="ProductOptionDto"  property="productOptionDto">
      <id     column="OPTION_NO"              property="optionNo" />
      <result column="OPTION_NAME"            property="optionName" />
    </association>
    <association javaType="ProductDto"  property="productDto">
      <id     column="PRODUCT_NO"       property="productNo" />
      <result column="PRODUCT_NAME"     property="productName" />
    </association>
    <association javaType="ProductImageDto"  property="reviewImageDto">
      <id     column="IMAGE_CODE"            property="imageCode" />
      <result column="POSITION"              property="position" />
      <result column="PATH"                  property="path" />
      <result column="FILESYSTEM_NAME"       property="filesystemName" />
    </association>
  </resultMap>
  
  <select id="getProductReviewCount" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM REVIEW_T
     WHERE OPTION_NO IN (<include refid = "getProductOptionNo"/>)
  </select>
  
  <select id="getProductReviewList" parameterType="Map" resultMap="ReviewMap">
    SELECT A.REVIEW_NO, A.OPTION_NO, A.REVIEW_TITLE, A.REVIEW_CONTENTS, A.REVIEW_RATING, A.REVIEW_CREATED_AT, A.REVIEW_MODIFIED_AT, A.USER_NO, A.EMAIL, A.NAME, A.GENDER, A.OPTION_NAME, RI.PATH, RI.POSITION, RI.FILESYSTEM_NAME
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY ${order} DESC) AS RN, R.REVIEW_NO, R.OPTION_NO, R.REVIEW_TITLE, R.REVIEW_CONTENTS, R.REVIEW_RATING, R.REVIEW_CREATED_AT, R.REVIEW_MODIFIED_AT, U.USER_NO, U.EMAIL, U.NAME, U.GENDER
                 , (SELECT OPTION_NAME FROM PRODUCT_OPTION_T O WHERE O.OPTION_NO = R.OPTION_NO) AS OPTION_NAME
              FROM REVIEW_T R LEFT OUTER JOIN USER_T U
                ON R.USER_NO = U.USER_NO
             WHERE OPTION_NO IN (<include refid = "getProductOptionNo"/>)
             ) A LEFT OUTER JOIN PRODUCT_IMAGE_T RI
        ON RI.IMAGE_CODE = 'review_' || A.REVIEW_NO
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getUserReviewCount" parameterType="int" resultType="int">
    SELECT COUNT(*)
      FROM REVIEW_T
     WHERE USER_NO = #{userNo}
  </select>
  
  <select id="getUserReviewList" parameterType="Map" resultMap="ReviewMap">
    SELECT A.REVIEW_NO, A.REVIEW_TITLE, A.REVIEW_CONTENTS, A.REVIEW_RATING, A.REVIEW_CREATED_AT, A.REVIEW_MODIFIED_AT, A.PRODUCT_NO, A.PRODUCT_NAME, A.OPTION_NO, A.OPTION_NAME, RI.PATH, RI.POSITION, RI.FILESYSTEM_NAME
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY ${order} DESC) AS RN, R.REVIEW_NO, R.REVIEW_TITLE, R.REVIEW_CONTENTS, R.REVIEW_RATING, R.REVIEW_CREATED_AT, R.REVIEW_MODIFIED_AT
                 , O.OPTION_NO, O.OPTION_NAME
                 , P.PRODUCT_NO, P.PRODUCT_NAME
              FROM PRODUCT_OPTION_T O INNER JOIN REVIEW_T R
                ON O.OPTION_NO = R.OPTION_NO INNER JOIN PRODUCT_T P
                ON P.PRODUCT_NO = O.PRODUCT_NO
             WHERE USER_NO = #{userNo}
            ) A LEFT OUTER JOIN PRODUCT_IMAGE_T RI
        ON RI.IMAGE_CODE = 'review_' || A.REVIEW_NO
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getNotReviewedCount" parameterType="int">
    SELECT COUNT(*)
      FROM ORDER_T O INNER JOIN ORDER_DETAIL_T OD
        ON O.ORDER_NO = OD.ORDER_NO LEFT OUTER JOIN REVIEW_T R
        ON R.USER_NO = O.USER_NO AND R.OPTION_NO = OD.OPTION_NO
     WHERE O.USER_NO = #{userNo} AND R.REVIEW_NO IS NULL
  </select>
  
  <select id="getNotReviewedList" parameterType="Map" resultMap="ReviewMap">
    SELECT A.PRODUCT_NO, A.PRODUCT_NAME, A.OPTION_NO, A.OPTION_NAME, A.ORDER_DATE, PI.PATH, PI.FILESYSTEM_NAME
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY ${order}) AS RN
                 , P.PRODUCT_NO, P.PRODUCT_NAME
                 , PO.OPTION_NO, PO.OPTION_NAME
                 , O.ORDER_DATE
              FROM ORDER_T O INNER JOIN ORDER_DETAIL_T OD
                ON O.ORDER_NO = OD.ORDER_NO LEFT OUTER JOIN REVIEW_T R
                ON R.USER_NO = O.USER_NO AND R.OPTION_NO = OD.OPTION_NO INNER JOIN PRODUCT_OPTION_T PO
                ON PO.OPTION_NO = OD.OPTION_NO INNER JOIN PRODUCT_T P
                ON P.PRODUCT_NO = PO.PRODUCT_NO
             WHERE O.USER_NO = #{userNo} AND R.REVIEW_NO IS NULL
           ) A LEFT OUTER JOIN PRODUCT_IMAGE_T PI
        ON PI.IMAGE_CODE = 'product_' || A.PRODUCT_NO AND PI.POSITION = 'preview'
     WHERE A.RN BETWEEN #{begin} AND #{end}
  </select>
  
  <insert id="insertProductReview" parameterType="ReviewDto">
    <selectKey order="BEFORE" keyProperty="reviewNo" resultType="int">
      SELECT REVIEW_SEQ.NEXTVAL
        FROM DUAL
    </selectKey>
    INSERT INTO REVIEW_T (
           REVIEW_NO       
         , USER_NO
         , OPTION_NO       
         , REVIEW_TITLE    
         , REVIEW_CONTENTS 
         , REVIEW_RATING   
         , REVIEW_CREATED_AT
         , REVIEW_MODIFIED_AT
         ) VALUES (
           #{reviewNo}
         , #{userDto.userNo}
         , #{productOptionDto.optionNo}
         , #{reviewTitle}
         , #{reviewContents}
         , #{reviewRating}
         , TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
         , TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
         )
  </insert>
  
  <update id="updateProductRating" parameterType="int">
     UPDATE PRODUCT_T
       SET PRODUCT_RATING = (SELECT AVG(REVIEW_RATING) 
                               FROM REVIEW_T 
                              WHERE OPTION_NO IN (<include refid = "getProductOptionNo"/>))
  </update>
  
  <sql id = "getProductOptionNo">
    SELECT OPTION_NO 
      FROM PRODUCT_OPTION_T
     WHERE PRODUCT_NO = ${productNo}
  </sql>
  
</mapper>