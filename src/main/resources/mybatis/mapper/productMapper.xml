<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.gdu.petmall.dao.ProductMapper">
	
  <resultMap type="ProductDto" id="ProductMap">
    <id     column="PRODUCT_NO"           property="productNo" />
    <result column="PRODUCT_NAME"         property="productName" />
    <result column="PRODUCT_TITLE"        property="productTitle" />
    <result column="PRODUCT_PRICE"        property="productPrice" />
    <result column="PRODUCT_DESCRIPTION"  property="productDescription" />
    <result column="PRODUCT_SIZE "        property="productSize" />
    <result column="PRODUCT_WARNING"      property="productWarning" />
    <result column="PRODUCT_HIT"          property="productHit" />
    <result column="PRODUCT_RATING"       property="productRating" />
    <result column="PRODUCT_COUNT"        property="productCount" />
    <result column="REVIEW_COUNT"        property="reviewCount" />
    <association javaType="ProductImageDto"  property="productImageDto">
      <id     column="IMAGE_CODE"          property="imageCode" />
      <result column="POSITION"      property="position" />
      <result column="PATH"      property="path" />
      <result column="FILESYSTEM_NAME"      property="filesystemName" />
    </association>
  </resultMap>
  
  <select id="getCategoryList" resultType="CategoryDto">
    SELECT CATEGORY_NO, CATEGORY_NAME
      FROM CATEGORY_T
  </select>
  
  <select id="getProductCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM PRODUCT_T
    <where>
      <if test="categoryNo != 0">
        CATEGORY_NO = #{categoryNo}
      </if>
      <if test="searchText != null">
        AND PRODUCT_NAME LIKE '%' || #{searchText} || '%'
      </if>
    </where>
  </select>
  
  <select id="getProductList" parameterType="Map" resultMap="ProductMap">
    SELECT RN, PRODUCT_NO, PRODUCT_NAME, PRODUCT_TITLE, PRODUCT_PRICE, PRODUCT_CREATED_AT, PRODUCT_HIT, PRODUCT_RATING, PRODUCT_COUNT, PRODUCT_SALES, REVIEW_COUNT, PATH, FILESYSTEM_NAME
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY ${order} DESC) AS RN, A.PRODUCT_NO, A.PRODUCT_NAME, A.PRODUCT_TITLE, A.PRODUCT_PRICE, A.PRODUCT_CREATED_AT, A.PRODUCT_HIT, A.PRODUCT_RATING, A.PRODUCT_COUNT, A.PRODUCT_SALES, A.REVIEW_COUNT, A.PATH, A.FILESYSTEM_NAME
              FROM (SELECT P.PRODUCT_NO, P.PRODUCT_NAME, P.PRODUCT_TITLE, P.PRODUCT_PRICE, P.PRODUCT_CREATED_AT, P.PRODUCT_HIT, P.PRODUCT_RATING
                         , (SELECT SUM(OPTION_COUNT) FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO) AS PRODUCT_COUNT
                         , (SELECT SUM(OPTION_SALES) FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO) AS PRODUCT_SALES
                         , (SELECT COUNT(*) FROM REVIEW_T R WHERE R.OPTION_NO IN (SELECT OPT.OPTION_NO FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO)) AS REVIEW_COUNT
                         , PI.PATH, PI.FILESYSTEM_NAME
                      FROM PRODUCT_T P LEFT OUTER JOIN PRODUCT_IMAGE_T PI
                        ON PI.IMAGE_CODE = 'product_' || P.PRODUCT_NO
                       AND PI.POSITION = 'thumbnail'
                     <where>
                       <if test="categoryNo != 0">
                         CATEGORY_NO = #{categoryNo}
                       </if>
                       <if test="searchText != null">
                         AND PRODUCT_NAME LIKE '%' || #{searchText} || '%'
                       </if>
                     </where>
                   ) A
            )
     WHERE RN BETWEEN #{begin} AND #{end}
  </select>
  
  <select id="getCurrentEvent" resultType="EventDto">
    SELECT A.DISCOUNT_PERCENT, A.DISCOUNT_PRICE
      FROM (SELECT ROW_NUMBER() OVER(ORDER BY DISCOUNT_PERCENT DESC) AS RN, DISCOUNT_PERCENT, DISCOUNT_PRICE
            FROM EVENT_T
            WHERE STATE = 1) A
     WHERE RN = 1
  </select>
  
  <select id="getProduct" parameterType="int" resultType="ProductDto">
    SELECT PRODUCT_NO, PRODUCT_NAME, PRODUCT_TITLE, PRODUCT_CONTENTS, PRODUCT_PRICE, PRODUCT_CREATED_AT, PRODUCT_DESCRIPTION, PRODUCT_SIZE, PRODUCT_WARNING, CATEGORY_NO, PRODUCT_HIT, PRODUCT_RATING
                    , (SELECT SUM(OPTION_COUNT) FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO) AS PRODUCT_COUNT
                    , (SELECT SUM(OPTION_SALES) FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO) AS PRODUCT_SALES
                    , (SELECT COUNT(*) FROM REVIEW_T R WHERE R.OPTION_NO IN (SELECT OPT.OPTION_NO FROM PRODUCT_OPTION_T OPT WHERE P.PRODUCT_NO = OPT.PRODUCT_NO)) AS REVIEW_COUNT
           FROM PRODUCT_T P
     WHERE PRODUCT_NO = #{productNo}
  </select>
  
  <select id="getOptionList" parameterType="int" resultType="ProductOptionDto">
    SELECT OPTION_NO, PRODUCT_NO, OPTION_NAME, ADD_PRICE, OPTION_COUNT, OPTION_SALES
      FROM PRODUCT_OPTION_T
     WHERE PRODUCT_NO = #{productNo}
  </select>
  
  <insert id="insertProduct" parameterType="ProductDto">
    <selectKey order="BEFORE" keyProperty="productNo" resultType="int">
      SELECT PRODUCT_SEQ.NEXTVAL
        FROM DUAL
    </selectKey>
    INSERT INTO PRODUCT_T (
        PRODUCT_NO
      , PRODUCT_NAME
      , PRODUCT_TITLE
      , PRODUCT_CONTENTS
      , PRODUCT_PRICE
      , PRODUCT_CREATED_AT
      , PRODUCT_MODIFIED_AT
      , PRODUCT_DESCRIPTION
      , PRODUCT_SIZE
      , PRODUCT_WARNING
      , CATEGORY_NO
      , PRODUCT_HIT
      , PRODUCT_RATING
      ) VALUES (
        #{productNo}
      , #{productName}
      , #{productTitle}
      , #{productContents}
      , #{productPrice}
      , TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
      , TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
      , #{productDescription}
      , #{productSize}
      , #{productWarning}
      , #{categoryNo}
      , 0
      , null
    )
  </insert>
  
  <insert id="insertProductOption" parameterType="ProductOptionDto">
    INSERT INTO PRODUCT_OPTION_T (
      OPTION_NO
    , PRODUCT_NO
    , OPTION_NAME
    , ADD_PRICE
    , OPTION_COUNT    
    , OPTION_SALES
    ) VALUES (
      PRODUCT_OPTION_SEQ.NEXTVAL
    , #{productNo}
    , #{optionName}
    , #{addPrice}
    , #{optionCount}
    , 0
    )
  </insert>

  <select id="getProductImageList" parameterType="Map" resultType="ProductImageDto">
    SELECT IMAGE_CODE, POSITION, PATH, FILESYSTEM_NAME
      FROM PRODUCT_IMAGE_T
    <where>
      <if test="productNo != null">
        IMAGE_CODE = 'product_' || #{productNo}
      </if>
      <if test="reviewNo != null">
        IMAGE_CODE = 'review_' || #{reviewNo}
      </if>
      <if test="position != null">
        AND POSITION = #{position}
      </if>
    </where>
  </select>
    
  <insert id="insertProductImage" parameterType="ProductImageDto">
    INSERT INTO PRODUCT_IMAGE_T (
      IMAGE_CODE
    , POSITION
    , PATH
    , FILESYSTEM_NAME
    ) VALUES (
      #{imageCode}
    , #{position}
    , #{path}
    , #{filesystemName}
    )
  </insert>
  
  <update id="updateProduct" parameterType="ProductDto">
    UPDATE PRODUCT_T 
       SET PRODUCT_NAME = #{productName}
         , PRODUCT_TITLE = #{productTitle}
         , PRODUCT_CONTENTS = #{productContents}
         , PRODUCT_PRICE = #{productPrice}
         , PRODUCT_MODIFIED_AT = TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
         , PRODUCT_DESCRIPTION = #{productDescription}
         , PRODUCT_SIZE = #{productSize}
         , PRODUCT_WARNING = #{productWarning}
         , CATEGORY_NO = #{categoryNo}
     WHERE PRODUCT_NO = #{productNo}
  </update>
  
  <update id="updateProductOption" parameterType="ProductOptionDto">
    UPDATE PRODUCT_OPTION_T 
       SET OPTION_NAME = #{optionName}
         , ADD_PRICE = #{addPrice}
         , OPTION_COUNT = #{optionCount}
     WHERE OPTION_NO = #{optionNo}
  </update>
  
  <delete id="deleteProductOption" parameterType="int">
    DELETE FROM PRODUCT_OPTION_T
     WHERE OPTION_NO = #{optionNo}
  </delete>
  
  <delete id="deleteProductImage" parameterType="String">
    DELETE FROM PRODUCT_IMAGE_T
     WHERE FILESYSTEM_NAME = #{filesystemName}    
  </delete>
    
  <delete id="deleteProduct" parameterType="int">
    DELETE 
      FROM PRODUCT_T
     WHERE PRODUCT_NO = #{productNo}
  </delete>
  
  <update id="updateProductHit" parameterType="int">
    UPDATE PRODUCT_T
       SET PRODUCT_HIT = (SELECT PRODUCT_HIT + 1 FROM PRODUCT_T WHERE PRODUCT_NO = #{productNo})
     WHERE PRODUCT_NO = #{productNo}
  </update>
  
  <select id="getProductImageInYesterday" resultType="ProductImageDto">
    SELECT IMAGE_CODE, POSITION, PATH, FILESYSTEM_NAME
      FROM PRODUCT_IMAGE_T
     WHERE PATH LIKE '%' || TO_CHAR(SYSDATE - 1,'YYYY/MM/DD') ||'%'
  </select>
  
</mapper>